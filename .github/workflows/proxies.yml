name: Hourly Proxy Checker

on:
  schedule:
    - cron: '0 * * * *'  # Ogni ora al minuto 0
  workflow_dispatch:     # Permette avvio manuale
  push:
    branches: [ main ]   # Test su push (opzionale)

jobs:
  check-proxies:
    runs-on: ubuntu-latest
    timeout-minutes: 30  # Timeout di sicurezza
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests
        
    - name: Run proxy checker
      id: proxy-check
      run: |
        echo "üöÄ Avvio controllo proxy automatico..."
        python proxies.py
        
        # Conta i risultati
        if [ -f "proxy_http.txt" ]; then
          HTTP_COUNT=$(wc -l < proxy_http.txt)
        else
          HTTP_COUNT=0
        fi
        
        if [ -f "proxy_socks5.txt" ]; then
          SOCKS5_COUNT=$(wc -l < proxy_socks5.txt)
        else
          SOCKS5_COUNT=0
        fi
        
        TOTAL_COUNT=$((HTTP_COUNT + SOCKS5_COUNT))
        
        echo "http_count=$HTTP_COUNT" >> $GITHUB_OUTPUT
        echo "socks5_count=$SOCKS5_COUNT" >> $GITHUB_OUTPUT
        echo "total_count=$TOTAL_COUNT" >> $GITHUB_OUTPUT
        
        echo "‚úÖ Trovati $TOTAL_COUNT proxy funzionanti ($HTTP_COUNT HTTP, $SOCKS5_COUNT SOCKS5)"
        
    - name: Create results summary
      run: |
        echo "## üöÄ Proxy Check Results - $(date)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Tipo | Quantit√† |" >> $GITHUB_STEP_SUMMARY
        echo "|------|----------|" >> $GITHUB_STEP_SUMMARY
        echo "| HTTP | ${{ steps.proxy-check.outputs.http_count }} |" >> $GITHUB_STEP_SUMMARY
        echo "| SOCKS5 | ${{ steps.proxy-check.outputs.socks5_count }} |" >> $GITHUB_STEP_SUMMARY
        echo "| **Totale** | **${{ steps.proxy-check.outputs.total_count }}** |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "‚è∞ **Eseguito alle:** $(date)" >> $GITHUB_STEP_SUMMARY
        
    - name: Upload proxy results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: proxy-results-${{ github.run_number }}-$(date +%Y%m%d-%H%M)
        path: |
          proxy_http.txt
          proxy_socks5.txt
        retention-days: 30
        
    - name: Commit and push results
      if: steps.proxy-check.outputs.total_count > 0
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action Bot"
        
        # Crea un timestamp per il commit
        TIMESTAMP=$(date '+%Y-%m-%d %H:%M UTC')
        
        # Aggiungi i file solo se esistono e non sono vuoti
        if [ -s "proxy_http.txt" ]; then
          git add proxy_http.txt
        fi
        
        if [ -s "proxy_socks5.txt" ]; then
          git add proxy_socks5.txt
        fi
        
        # Commit solo se ci sono cambiamenti
        if ! git diff --staged --quiet; then
          git commit -m "ü§ñ Auto-update proxy lists - $TIMESTAMP
          
          üìä Results:
          - HTTP proxies: ${{ steps.proxy-check.outputs.http_count }}
          - SOCKS5 proxies: ${{ steps.proxy-check.outputs.socks5_count }}
          - Total: ${{ steps.proxy-check.outputs.total_count }}
          
          Generated by GitHub Actions"
          
          git push
          echo "‚úÖ Proxy lists updated and pushed to repository"
        else
          echo "‚ÑπÔ∏è No changes to commit"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
